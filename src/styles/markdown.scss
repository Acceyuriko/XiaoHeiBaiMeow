@use './variables.scss' as *;
@use './iconfont.scss' as *;
@use './mixin.scss' as *;

.markdown {
  .note {
    border-radius: 0.1875rem;
    margin: 1rem 0;
    padding: 1rem;
    position: relative;

    background: var(--note-bg, rgb(var(--color-grey-2)));
    color: rgb(var(--color-grey-6));
    border-left: 0.25rem solid var(--note-border, rgb(var(--color-grey-4)));
    font-size: $font-size-small;
    padding-left: 2.5rem;

    &::before {
      position: absolute;
      left: 0.5rem;
      top: calc(50% - 1.5rem);
      font-family: 'ic';
      font-weight: normal;
      font-size: 1.5rem;
      color: var(--note-text, rgb(var(--color-grey-6)));
    }

    &.default {
      &::before {
        @extend %ic-arrow-circle-right;
      }
    }

    &.primary {
      &::before {
        @extend %ic-plus-circle;
      }
    }

    &.info {
      &::before {
        @extend %ic-info-circle;
      }
    }

    &.success {
      &::before {
        @extend %ic-check-circle;
      }
    }

    &.warning {
      &::before {
        @extend %ic-exclamation-circle;
      }
    }

    &.danger {
      &::before {
        @extend %ic-minus-circle;
      }
    }

    &.no-icon {
      &::before {
        content: none;
      }

      padding-left: 1rem;
    }
  }

  .note,
  details {
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin-top: 0.1875rem;
      border-bottom: initial;
      margin-bottom: 0;
      padding-top: 0;
    }

    p {
      line-height: 1.8;
    }

    a {
      &:not(.btn) {
        color: var(--note-hover);
        border-bottom: 0.0625rem dashed var(--note-text);

        &:hover {
          color: var(--note-text);
          border-bottom-color: var(--note-text);
        }
      }
    }

    ul {
      li::before {
        background: var(--note-text);
      }
    }

    ol {
      li:before {
        background: var(--note-text, var(--color-red)) !important;
        width: 0.8rem;
        height: 0.8rem;
        font-size: 0.45rem;
        line-height: 0.8rem;
        top: 0.4rem;
        left: -1.2rem;
      }
    }
  }

  p,
  table,
  pre,
  blockquote,
  img,
  .tabs,
  .links {
    &:last-child {
      margin-bottom: 0;
    }
  }

  ul,
  dd,
  ol {
    ul,
    ol {
      margin-top: 0;
    }
  }

  a {
    color: var(--color-red); //原始链接颜色

    &:hover {
      color: rgb(var(--color-blue)); //鼠标经过颜色
    }
  }

  @for $i from 1 through 6 {
    h#{$i} {
      position: relative;
      margin-top: 0.625rem;
      margin-left: 1.25rem;
      font-size: 26px - $i * 2px;

      @include screen-md {
        padding-left: 0;
      }

      .anchor {
        float: right;
        padding-top: 4px;
        margin-left: 0.625rem;
        display: flex;
        align-items: flex-end;
        justify-content: flex-end;
        color: rgb(var(--color-grey-4));
        border-bottom-color: transparent;
        &:hover {
          color: var(--color-red);
          border-bottom-color: transparent;
        }
        &::before {
          content: 'H';
          position: absolute;
          top: 6px;
          left: -24px;
          font-size: 80%;
          &::before {
            content: ' ';
          }
        }
        &::after {
          content: ' #{$i} ';
          position: absolute;
          left: -10px;
          top: 16px;
          font-size: 50%;
        }
      }
    }
  }

  h1 {
    &::after {
      content: '';
      position: absolute;
      bottom: -8px;
      display: block;
      box-sizing: unset;
      width: 100%;
      height: 1px;
      background: rgb(var(--color-grey-5));
      padding-right: 24px;
      margin-left: -24px;
    }
  }

  p {
    margin: 0 0 0.8rem;
  }

  em {
    font-style: italic;
  }

  a {
    color: var(--color-red);
    padding-bottom: 3px;
    border-bottom: 2px dashed rgb(var(--color-grey-3));
    transition: all 0.2s ease-in-out;
    &:hover {
      color: rgb(var(--color-blue));
      border-bottom-color: rgb(var(--color-blue));
    }
  }

  :not(pre) > code {
    color: var(--color-red);
    background-color: rgb(var(--color-grey-0));
    overflow-wrap: break-word;
    border-radius: 0.3rem;
    border-width: 0.0625rem;
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.1);
    border-image: initial;
    padding: 0.2rem 0.3rem;
  }

  blockquote {
    margin: 1.25rem 0;
    padding: 0.625rem 1.25rem;
    font-size: 90%;
    color: rgb(var(--color-grey-6));
    background-color: rgb(var(--color-grey-2));
    border-radius: 0.1875rem;
    border-left: 0.25rem solid var(--color-red);
  }

  iframe {
    margin-bottom: 1.25rem;
  }

  .image-info {
    display: block;
    text-align: center;
    font-size: 0.8125em;
    color: rgb(var(--color-grey-4));
  }

  .video-container {
    height: 0;
    margin-bottom: 1.25rem;
    overflow: hidden;
    padding-top: 75%;
    position: relative;
    width: 100%;

    iframe,
    object,
    embed {
      height: 100%;
      left: 0;
      margin: 0;
      position: absolute;
      top: 0;
      width: 100%;
    }
  }

  .kbd,
  kbd {
    background-color: rgb(var(--color-grey-1));
    background-image: linear-gradient(
      rgb(var(--color-grey-2)),
      rgb(var(--color-grey-0)),
      rgb(var(--color-grey-2))
    );
    border: 0.0625rem solid rgb(var(--color-grey-4));
    border-radius: 0.2rem;
    box-shadow: 0.1rem 0.1rem 0.2rem rgb(var(--color-grey-9) / 0.1);
    font-family: inherit;
    padding: 0.1rem 0.3rem;
    white-space: nowrap;
  }

  mark {
    background-color: #dbfdad;
  }

  ins {
    --line-color: var(--note-hover, var(--color-red));
    text-decoration: none;
    border-bottom: 0.125rem solid var(--line-color);

    &.wavy {
      text-decoration-style: wavy;
      text-decoration-line: underline;
      text-decoration-color: var(--line-color);
      border-bottom: none;
    }

    &.dot {
      border-bottom: 0.2rem dotted var(--line-color);
    }
  }

  s {
    color: rgb(var(--color-grey-5));
    text-decoration-color: var(--note-hover, rgb(var(--color-grey-5)));
  }

  ruby {
    padding: 0 0.3125rem;
  }

  .katex-display {
    overflow-x: scroll;
    overflow-y: hidden;
  }

  .spoiler:not(.bulr) {
    background-color: rgb(var(--color-grey-7));
    color: rgb(var(--color-grey-7));
    text-shadow: none;
    transition: color 0.3s;
    padding: 0 0.1875rem;

    &:hover {
      color: #fff;
    }
  }

  .bulr {
    text-shadow: rgba(0, 0, 0, 0.7) 0rem 0rem 0.625rem;
    color: transparent;
  }

  .rainbow {
    background-image: linear-gradient(
      to left,
      orangered,
      orange,
      gold,
      lightgreen,
      cyan,
      dodgerblue,
      mediumpurple,
      hotpink,
      orangered
    );
    background-size: 110vw;
    background-clip: text;
    color: transparent;
    animation: rainbow 60s linear infinite;
  }

  li {
    position: relative;
    margin: 0.2rem 0;

    &:before {
      transition: all 0.2s ease-in-out;
    }

    p {
      margin: 0;
    }
  }

  ul,
  ol,
  dl {
    margin: 0.5em 0 0.5em;
    padding: 0.1em 0.2em 0.1em 1.4em;
  }

  ul > li,
  dl dt {
    &::before {
      content: '';
      position: absolute;
      width: 0.4em;
      height: 0.4em;
      background: var(--color-red);
      border-radius: 50%;
      top: 0.85em;
      left: -1em;
    }

    &:hover::before {
      background: var(--color-pink);
    }
  }

  ol {
    &:not([start]) {
      counter-reset: counter;
    }

    > li {
      &::before {
        counter-increment: counter;
        content: counter(counter);
        position: absolute;
        width: 1.4em;
        height: 1.4em;
        border-radius: 50%;
        text-align: center;
        font-size: 0.8em;
        line-height: 1.4;
        top: 0.5em;
        left: -1.8em;
        background: var(--color-red);
        color: rgb(var(--color-grey-1));
        cursor: pointer;
      }

      &:hover::before {
        color: rgb(var(--color-grey-1));
        background: var(--color-pink);
      }
    }
  }

  dl {
    dt {
      position: relative;
    }
    dd {
      padding-left: 0.9375em;
    }
  }

  ul {
    li.nodot {
      &::before {
        @include li-nodot();
      }
    }

    li.task-list-item {
      &::before {
        @include li-nodot();
      }

      input[type='checkbox'] {
        display: none;
      }

      input[type='checkbox'] + label::before {
        @extend %ic-times-circle;
        font-family: 'ic';
        font-weight: normal;
        color: rgb(var(--color-grey-4));
        display: inline-block;
        margin-right: 0.625em;
      }

      input[type='checkbox']:checked + label::before {
        @extend %ic-check-circle;
        color: var(--note-text, var(--color-red));
      }
    }
  }

  li ul > li {
    &::before {
      background: rgb(var(--color-grey-1));
      border: 1px solid var(--color-red);
    }
  }

  li ol > li,
  dd ol > li {
    &::before {
      content: counter(counter) '.';
      background: none;
      color: var(--color-red);
      font-size: 1em;
      line-height: 1;
      width: auto;
    }

    &:hover::before {
      background: none;
      color: var(--color-pink);
    }
  }
}
